#CONFIGURAÇÃO DE ACESSO AO BANCO DE DADOS SQL SERVER
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.url=jdbc:mysql://localhost:3306/beleza?verifyServerCertificate=false&useSSL=false&requireSSL=false
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.show-sql=true

#spring.mvc.view.prefix=/WEB-INF/views/
#spring.mvc.view.suffix=.html

#PORTA DO TOMCAT LOCAL
server.port=8080

# ===============================
# = Thymeleaf configurations
# ===============================
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder  
# ==============================================================
#spring.queries.users-query=select usuario_email, usuario_senha, usuario_active from usuario where usuario_email=?
#spring.queries.roles-query=select u.usuario_email, r.role from usuario u inner join user_role ur on(u.usuario_id=ur.usuario_id) inner join role r on(ur.role_id=r.role_id) where u.usuario_email=?
spring.queries.users-query=select login_email, login_senha, login_active from login where login_email=?
spring.queries.roles-query=select l.login_email, r.role from login l inner join login_role ur on(l.login_id=ur.login_id) inner join role r on(ur.role_id=r.role_id) where l.login_email=?
